plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

androidExtensions {
    experimental = true
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    def vMajor = 1
    def vMinor = 0 // MAX: 99; otherwise will be break versionCode
    def vPatch = 9 // MAX: 99; otherwise will be break versionCode

    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        Properties vProps = new Properties()
        vProps.load(new FileInputStream(versionPropsFile))
        def vBuild = vProps['BUILD_NUMBER'].toInteger() + 1
        vProps['BUILD_NUMBER'] = vBuild.toString()
        vProps.store(versionPropsFile.newWriter(), null)
        def vCode = vMajor * 10000 + vMinor * 100 + vPatch
        defaultConfig {
            applicationId "com.example.currencylist"
            minSdkVersion 21
            targetSdkVersion 29
            versionCode vCode
            versionName "1.0"

            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }
    } else {
        throw new GradleException("Could not read version.properties!")
    }

    signingConfigs {
        register("release").configure {
            storeFile = file("../key/testKey.jks")
            storePassword = "test123"
            keyAlias = "TestKey0"
            keyPassword = "test1234"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig = signingConfigs.getByName("release")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation "androidx.fragment:fragment-ktx:1.2.5"
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0")

    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation ("com.github.bumptech.glide:glide:4.11.0") {
        exclude group: "com.android.support"
    }

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation 'androidx.asynclayoutinflater:asynclayoutinflater:1.0.0'
    debugImplementation "com.github.ChuckerTeam.Chucker:library:3.1.1"
    releaseImplementation "com.github.ChuckerTeam.Chucker:library-no-op:3.0.1"
    implementation("com.squareup.okhttp3:logging-interceptor:4.5.0")

    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.7")

    def roomVersion = "2.2.5"
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"

    def daggerVersion = "2.27"
    api "com.google.dagger:dagger-android:$daggerVersion"
    api "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}