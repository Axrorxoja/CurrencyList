# This is a basic workflow to help you get started with Actions

name: Android CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Set Up JDK
    - name: Set Up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        
    - name: Android Emulator Runner
      uses: ReactiveCircus/android-emulator-runner@v2.11.0
      with:
    # API level of the platform and system image - e.g. 23 for Android Marshmallow, 29 for Android 10
       api-level: 28
    # target of the system image - default or google_apis
#     target: # optional, default is default
    # CPU architecture of the system image - x86 or x86_64
#     arch: # optional, default is x86
    # hardware profile used for creating the AVD - e.g. `Nexus 6`
#     profile: # optional
    # custom AVD name used for creating the Android Virtual Device
#     avd-name: # optional, default is test
    # command-line options used when launching the emulator - e.g. `-no-window -no-snapshot -camera-back emulated`
#     emulator-options: # optional, default is -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
    # whether to disable animations - true or false
#     disable-animations: # optional, default is true
    # build number of a specific version of the emulator binary to use - e.g. `6061023` for emulator v29.3.0.0
#     emulator-build: # optional
    # A custom working directory - e.g. `./android` if your root Gradle project is under the `./android` sub-directory within your repository
#     working-directory: # optional
    # version of NDK to install - e.g. 21.0.6113669
#     ndk: # optional
    # version of CMake to install - e.g. 3.10.2.4988404
#     cmake: # optional
    # custom script to run - e.g. `./gradlew connectedCheck`
       script: ./gradlew connectedCheck --stacktrace
    
        
    # Runs test
    - name: Run tests
      run: ./gradlew test
      
    # Create Build
    - name: Build Project
      run: ./gradlew assembleDebug
